version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: connect_four_db
    environment:
      POSTGRES_DB: connect_four_game
      POSTGRES_USER: gameuser
      POSTGRES_PASSWORD: gamepass123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql

  # Kafka (Optional - for analytics)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # For internal Docker network communication (backend service connects to kafka:29092)
      # For external host access (e.g., local tools connect to localhost:9092)
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092

  # Backend Application (when containerized)
  backend:
    build: ./backend
    container_name: connect_four_backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://gameuser:gamepass123@postgres:5432/connect_four_game
      KAFKA_BROKERS: kafka:29092 # Connect to the internal listener
    depends_on:
      - postgres
      - kafka
    profiles:
      - production

volumes:
  postgres_data: